include_guard()

include(find_java)

if(Java_VERSION_MINOR LESS 6 OR Java_VERSION_MINOR GREATER 8)
    message(FATAL_ERROR "Java Runtime Environment 6, 7 or 8 is required for apidoctool.")
endif()

set(apidoctool_jar "${CONAN_APIDOCTOOL_ROOT}/apidoctool.jar")
set(swagger_codegen_jar "${CONAN_SWAGGER-CODEGEN_ROOT}/cli.jar")

function(fill_apidoctool_deps_and_params)
    cmake_parse_arguments(ARG "" "VMS_PATH;CONFIG;OUT_DEPS;OUT_PARAMS" "" ${ARGN})

    set(apidoctool_params
        "-vms-path" ${ARG_VMS_PATH}
        "-config" ${ARG_CONFIG}
    )

    execute_process(
        COMMAND "${Java_JAVA_EXECUTABLE}" -jar "${apidoctool_jar}" print-deps ${apidoctool_params}
        RESULT_VARIABLE apidoctool_result
        OUTPUT_VARIABLE apidoctool_deps
    )

    if(NOT apidoctool_result EQUAL 0)
        set(error_message "Cannot get dependency list from apidoctool.")

        if(targetDevice MATCHES "macos_arm64")
          set(error_message "${error_message}\n"
              "Please check rosetta 2 is installed: softwareupdate --install-rosetta")
        endif()

        message(FATAL_ERROR ${error_message})
    endif()

    nx_split_string(apidoctool_deps "${apidoctool_deps}")
    set(apidoctool_deps_absolute)
    foreach(dependency ${apidoctool_deps})
        list(APPEND apidoctool_deps_absolute "${ARG_VMS_PATH}/${dependency}")
    endforeach()

    set(${ARG_OUT_DEPS} ${apidoctool_deps_absolute} PARENT_SCOPE)
    set(${ARG_OUT_PARAMS} ${apidoctool_params} PARENT_SCOPE)
endfunction()

# generate an openapi.json file from the given TEMPLATE at the given OUTPUT path.
#   TEMPLATE (required)
#       Must be the full path to the an openapi*.yaml template file.
#       This file is converted by swagger-code-gen to equivalent json file.
#   VMS_PATH (optional)
#       Corresponds to the "-vms-path" argument to apidoctool. If not given, ${PROJECT_SOURCE_DIR}
#       is used.
#   CONFIG (required)
#       Corresponds to the "-config" argument to apidoctool. Typically a file with the name
#       "apidoctool.properties".
#   TMP_DIR (optional)
#       A temporary directory used by swagger-codegen when converting yaml to json. The resulting
#       json is consumed by apidoctool to produce the final output.
#       If not specified, ${CMAKE_CURRENT_BINARY_DIR} is used.
#   OUTPUT (required)
#       The path to the openapi schema file generated by apidoctool. This is the output of this
#       function.
#   VERBOSE (optional)
#       If given as "-verbose" or TRUE, causes apidoctool to generate verbose output.
function(nx_generate_openapi_schema)
    cmake_parse_arguments(ARG "" "TEMPLATE;VMS_PATH;CONFIG;TMP_DIR;OUTPUT;VERBOSE" "" ${ARGN})

    if(NOT ARG_VMS_PATH)
        set(ARG_VMS_PATH ${PROJECT_SOURCE_DIR})
    endif()

    if(NOT ARG_TMP_DIR)
        set(ARG_TMP_DIR ${CMAKE_CURRENT_BINARY_DIR})
    endif()
    set(ARG_TMP_DIR "${ARG_TMP_DIR}/swagger_codegen_out")

    if(ARG_VERBOSE)
        set(ARG_VERBOSE "-verbose")
    endif()

    fill_apidoctool_deps_and_params(
        VMS_PATH ${ARG_VMS_PATH}
        CONFIG ${ARG_CONFIG}
        OUT_DEPS apidoctool_deps_absolute
        OUT_PARAMS apidoctool_params
    )

    file(WRITE "${ARG_TMP_DIR}/README.md" "")

    add_custom_command(
        OUTPUT
            ${ARG_TMP_DIR}/openapi.json
            ${ARG_TMP_DIR}/.swagger-codegen-ignore
            ${ARG_TMP_DIR}/.swagger-codegen/VERSION
        DEPENDS
            ${swagger_codegen_jar}
            ${ARG_TEMPLATE}
        COMMAND
            ${Java_JAVA_EXECUTABLE} -Dfile.encoding=UTF-8 -jar ${swagger_codegen_jar}
            generate
            --input-spec ${ARG_TEMPLATE}
            --lang openapi
            --output ${ARG_TMP_DIR}/
            --skip-overwrite true
    )

    add_custom_command(
        OUTPUT ${ARG_OUTPUT}
        DEPENDS
            ${apidoctool_jar}
            ${ARG_CONFIG}
            ${ARG_TMP_DIR}/openapi.json
            ${apidoctool_deps_absolute}
        COMMAND
            ${Java_JAVA_EXECUTABLE} -Dfile.encoding=UTF-8 -jar ${apidoctool_jar} ${ARG_VERBOSE}
            code-to-json
            -openapi-template-json ${ARG_TMP_DIR}/openapi.json
            -output-openapi-json ${ARG_OUTPUT}
            ${apidoctool_params}
    )
endfunction()
